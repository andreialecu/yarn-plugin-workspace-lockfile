/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-workspace-lockfile",
factory: function (require) {
var plugin;(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>i});const o=require("@yarnpkg/core"),r=require("@yarnpkg/cli"),a=require("@yarnpkg/fslib"),n=async({cwd:e})=>{const t=await o.Configuration.find(e,(0,r.getPluginConfiguration)(),{lookup:o.ProjectLookup.MANIFEST});t.values.set("cacheFolder",t.get("globalFolder")+"/cache"),t.values.set("enableMirror",!0),t.values.set("enableGlobalCache",!0);const a=await o.Cache.find(t),{project:n,workspace:i}=await o.Project.find(t,e);let c=new Set([i]);for(const e of c)for(const t of o.Manifest.hardDependencies)for(const o of e.manifest.getForScope(t).values()){const e=n.tryWorkspaceByDescriptor(o);null!==e&&c.add(e)}return await n.resolveEverything({cache:a,report:new o.ThrowReport}),await n.fetchEverything({cache:a,report:new o.ThrowReport}),n.generateLockfile()},i={configuration:{workspaceLockfiles:{description:"List of the workspaces that need a specific lockfile",type:o.SettingsType.STRING,default:!0,isArray:!0},workspaceLockfileName:{description:"Name of the workspaces specific lockfile",type:o.SettingsType.STRING,default:"yarn.lock-workspace"}},hooks:{afterAllInstalled:async e=>{const t=await o.Configuration.find(e.cwd,(0,r.getPluginConfiguration)()),i=t.values.get("workspaceLockfiles"),c=t.values.get("workspaceLockfileName");await o.StreamReport.start({configuration:t,stdout:process.stdout,includeLogs:!0},async t=>{const r=Array.isArray(i)?new Set(i.map(t=>e.getWorkspaceByIdent(o.structUtils.parseIdent(t)))):new Set(e.workspaces);for(const e of r){const o=a.ppath.join(e.cwd,c);await a.xfs.writeFilePromise(o,await n(e)),t.reportInfo(null,`${s="âœ“",`[32m${s}[0m`} Wrote ${o}`)}var s})}}};plugin=t})();
return plugin;
}
};